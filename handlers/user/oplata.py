from aiogram import types
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from data import payment
from handlers.admin.add import blogersha_cb
from keyboards.default.markups import trial, one_month, three_month, twelve_month, infinity_month
from loader import db, dp, bot
from urllib.parse import urlencode

@dp.callback_query_handler(blogersha_cb.filter(action='payment'))
async def oplata(query: CallbackQuery, callback_data: dict):
    await query.message.delete()
    product_idx = callback_data['id']
    price = int(callback_data['price'])
    blog = db.fetchone('SELECT * FROM blogersha WHERE idx=?', (product_idx,))

    idx, title, body, price_trial, price_one_month, price_three_month, price_twelve_month, price_infinity_month = blog

    if price == price_trial:
        duration = trial
    elif price == price_one_month:
        duration = one_month
    elif price == price_three_month:
        duration = three_month
    elif price == price_twelve_month:
        duration = twelve_month
    else:
        duration = infinity_month

    product = payment.get_new_blog(price, id, body, duration)

    markupSecond = InlineKeyboardMarkup(row_width=1)
    getLinkToPay = types.InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ãüí≥",
                                              url="https://aaio.io/merchant/pay?" + urlencode(product.params))
    IPayed = types.InlineKeyboardButton(text="–Ø –æ–ø–ª–∞—Ç–∏–ª‚òëÔ∏è", callback_data="paying")
    backToList = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚õî", callback_data="back_to_menu")
    markupSecond.add(getLinkToPay, IPayed, backToList)

    #bot.delete_message(query.message.chat.id, query.message.message_id)

    await query.message.answer(f"‚úÖ–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ - {product.amount}—Ä.\n"
                                      f"‚úÖ–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ - {product.duration}\n"
                                      f"‚úÖ–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ - {product.desc}\n\n"
                                      f"üî•–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã\"\n\n"
                                      "üîé–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, —Å–ª–µ–¥—É–µ—Ç –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É <–Ø –æ–ø–ª–∞—Ç–∏–ª‚òëÔ∏è>\n\n"
                                      "‚ùì–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ú–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–º–∞–Ω–¥—É /sos, –ª–∏–±–æ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –≤ –ª–∏—á–∫—É - [@nikita_imbochka]\n",
                               reply_markup=markupSecond, parse_mode='Markdown')
